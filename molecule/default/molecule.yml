---
driver:
  name: docker
platforms:
  - name: rhbk1
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    port_bindings:
      - "443/tcp"
    groups:
      - rhbk
    networks:
      - name: site
  - name: rhbk2
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    port_bindings:
      - "443/tcp"
    groups:
      - rhbk
    networks:
      - name: site
  - name: dg1
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    groups:
      - datagrid
    networks:
      - name: site
    port_bindings:
      - "61616/tcp"
  - name: dg2
    image: registry.access.redhat.com/ubi9/ubi-init:latest
    pre_build_image: true
    privileged: true
    command: "/usr/sbin/init"
    groups:
      - datagrid
    networks:
      - name: site
    port_bindings:
      - "61616/tcp"
  - name: postgres
    image: ubuntu/postgres:14-22.04_beta
    pre_build_image: true
    privileged: true
    command: postgres
    groups:
      - database
    networks:
      - name: site
    port_bindings:
      - "5432/tcp"
    mounts:
      - type: bind
        target: /etc/postgresql/postgresql.conf
        source: ${PWD}/molecule/default/postgresql/postgresql.conf
    env:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: mysecretpass
      POSTGRES_DB: keycloak
      POSTGRES_HOST_AUTH_METHOD: trust
provisioner:
  name: ansible
  env:
    PROD_JBOSSNETWORK_API_CLIENTID: "${PROD_JBOSSNETWORK_API_CLIENTID}"
    PROD_JBOSSNETWORK_API_SECRET: "${PROD_JBOSSNETWORK_API_SECRET}"
  config_options:
    defaults:
      interpreter_python: auto_silent
    ssh_connection:
      pipelining: false
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
    verify: verify.yml
  inventory:
    host_vars:
      localhost:
        ansible_python_interpreter: "{{ ansible_playbook_python }}"
verifier:
  name: ansible
scenario:
  test_sequence:
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
